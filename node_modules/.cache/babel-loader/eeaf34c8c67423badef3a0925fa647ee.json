{"ast":null,"code":"import { LAY_DANH_SACH_PHIM_ACTION } from '../const/QuanLyPhimConst';\nimport { LAY_DANH_SACH_RAP_ACTION } from '../const/QuanLyPhimConst';\nimport { LAY_LICH_CHIEU_HE_THONG_RAP_ACTION } from '../const/QuanLyPhimConst';\nconst stateDefault = {\n  danhSachPhim: [],\n  danhSachRap: [],\n  danhSachLichChieuHTR: [],\n  chiTietPhim: {},\n  thongTinPhongVe: {},\n  danhSachGheDangDat: [],\n  isLoading: false\n};\nexport const QuanLyPhimReducer = (state = stateDefault, action) => {\n  switch (action.type) {\n    case LAY_DANH_SACH_PHIM_ACTION:\n      {\n        state.danhSachPhim = action.danhSachPhim;\n        return { ...state\n        };\n      }\n\n    case LAY_DANH_SACH_RAP_ACTION:\n      {\n        state.danhSachRap = action.danhSachRap;\n        return { ...state\n        };\n      }\n\n    case LAY_LICH_CHIEU_HE_THONG_RAP_ACTION:\n      {\n        state.danhSachLichChieuHTR = action.danhSachLichChieuHTR;\n        return { ...state\n        };\n      }\n\n    case \"LAY_CHI_TIET_PHIM\":\n      {\n        state.chiTietPhim = action.chiTietPhim;\n        return { ...state\n        };\n      }\n\n    case \"LAY_THONG_TIN_PHONG_VE\":\n      {\n        state.thongTinPhongVe = action.thongTinPhongVe;\n        return { ...state\n        };\n      }\n\n    case \"DAT_GHE\":\n      {\n        let mangGheDangDat = [...state.danhSachGheDangDat];\n        let index = mangGheDangDat.findIndex(gheDangDat => gheDangDat.maGhe === action.gheDangDat.maGhe);\n\n        if (index !== -1) {\n          mangGheDangDat.splice(index, 1);\n        } else {\n          mangGheDangDat.push(action.gheDangDat);\n        }\n\n        return { ...state,\n          danhSachGheDangDat: mangGheDangDat\n        };\n      }\n\n    case \"DAT_VE_THANH_CONG\":\n      {\n        return { ...state,\n          danhSachGheDangDat: []\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n_c = QuanLyPhimReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuanLyPhimReducer\");","map":{"version":3,"sources":["E:/FRONTEND/webphim/src/redux/reducers/QuanLyPhimReducer.js"],"names":["LAY_DANH_SACH_PHIM_ACTION","LAY_DANH_SACH_RAP_ACTION","LAY_LICH_CHIEU_HE_THONG_RAP_ACTION","stateDefault","danhSachPhim","danhSachRap","danhSachLichChieuHTR","chiTietPhim","thongTinPhongVe","danhSachGheDangDat","isLoading","QuanLyPhimReducer","state","action","type","mangGheDangDat","index","findIndex","gheDangDat","maGhe","splice","push"],"mappings":"AAAA,SAAQA,yBAAR,QAAwC,0BAAxC;AACA,SAAQC,wBAAR,QAAuC,0BAAvC;AACA,SAAQC,kCAAR,QAAiD,0BAAjD;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAEjBC,EAAAA,WAAW,EAAC,EAFK;AAGjBC,EAAAA,oBAAoB,EAAC,EAHJ;AAIjBC,EAAAA,WAAW,EAAE,EAJI;AAKjBC,EAAAA,eAAe,EAAE,EALA;AAMjBC,EAAAA,kBAAkB,EAAC,EANF;AAOjBC,EAAAA,SAAS,EAAE;AAPM,CAArB;AAUA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,yBAAL;AAA+B;AAC3BY,QAAAA,KAAK,CAACR,YAAN,GAAqBS,MAAM,CAACT,YAA5B;AACA,eAAO,EAAC,GAAGQ;AAAJ,SAAP;AACH;;AACD,SAAKX,wBAAL;AAA8B;AAC1BW,QAAAA,KAAK,CAACP,WAAN,GAAoBQ,MAAM,CAACR,WAA3B;AACA,eAAO,EAAC,GAAGO;AAAJ,SAAP;AACH;;AACD,SAAKV,kCAAL;AAAwC;AACpCU,QAAAA,KAAK,CAACN,oBAAN,GAA6BO,MAAM,CAACP,oBAApC;AACA,eAAO,EAAC,GAAGM;AAAJ,SAAP;AACH;;AACD,SAAK,mBAAL;AAAyB;AACrBA,QAAAA,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACN,WAA3B;AACA,eAAO,EAAC,GAAGK;AAAJ,SAAP;AACH;;AAED,SAAK,wBAAL;AAA8B;AAC1BA,QAAAA,KAAK,CAACJ,eAAN,GAAwBK,MAAM,CAACL,eAA/B;AACA,eAAO,EAAC,GAAGI;AAAJ,SAAP;AACH;;AACD,SAAK,SAAL;AAAe;AACX,YAAIG,cAAc,GAAG,CAAC,GAAGH,KAAK,CAACH,kBAAV,CAArB;AAEA,YAAIO,KAAK,GAAGD,cAAc,CAACE,SAAf,CAAyBC,UAAU,IAAIA,UAAU,CAACC,KAAX,KAAqBN,MAAM,CAACK,UAAP,CAAkBC,KAA9E,CAAZ;;AAEA,YAAGH,KAAK,KAAG,CAAC,CAAZ,EAAc;AACVD,UAAAA,cAAc,CAACK,MAAf,CAAsBJ,KAAtB,EAA4B,CAA5B;AACH,SAFD,MAEK;AACDD,UAAAA,cAAc,CAACM,IAAf,CAAoBR,MAAM,CAACK,UAA3B;AACH;;AACD,eAAO,EAAC,GAAGN,KAAJ;AAAUH,UAAAA,kBAAkB,EAACM;AAA7B,SAAP;AACH;;AACD,SAAK,mBAAL;AAAyB;AACrB,eAAO,EAAC,GAAGH,KAAJ;AAAWH,UAAAA,kBAAkB,EAAC;AAA9B,SAAP;AACH;;AACD;AACI,aAAO,EAAC,GAAGG;AAAJ,OAAP;AAtCR;AAwCH,CAzCM;KAAMD,iB","sourcesContent":["import {LAY_DANH_SACH_PHIM_ACTION} from '../const/QuanLyPhimConst';\r\nimport {LAY_DANH_SACH_RAP_ACTION} from '../const/QuanLyPhimConst';\r\nimport {LAY_LICH_CHIEU_HE_THONG_RAP_ACTION} from '../const/QuanLyPhimConst';\r\n\r\n\r\nconst stateDefault = {\r\n    danhSachPhim: [],\r\n    danhSachRap:[],\r\n    danhSachLichChieuHTR:[],\r\n    chiTietPhim: {},\r\n    thongTinPhongVe: {},\r\n    danhSachGheDangDat:[],\r\n    isLoading: false\r\n};\r\n\r\nexport const QuanLyPhimReducer = (state = stateDefault, action) => {\r\n    switch (action.type){\r\n        case LAY_DANH_SACH_PHIM_ACTION:{\r\n            state.danhSachPhim = action.danhSachPhim;\r\n            return {...state};\r\n        }\r\n        case LAY_DANH_SACH_RAP_ACTION:{\r\n            state.danhSachRap = action.danhSachRap;\r\n            return {...state};\r\n        }\r\n        case LAY_LICH_CHIEU_HE_THONG_RAP_ACTION:{\r\n            state.danhSachLichChieuHTR = action.danhSachLichChieuHTR;\r\n            return {...state};\r\n        }\r\n        case \"LAY_CHI_TIET_PHIM\":{\r\n            state.chiTietPhim = action.chiTietPhim;\r\n            return {...state};\r\n        }\r\n       \r\n        case \"LAY_THONG_TIN_PHONG_VE\":{\r\n            state.thongTinPhongVe = action.thongTinPhongVe;\r\n            return {...state};\r\n        }\r\n        case \"DAT_GHE\":{\r\n            let mangGheDangDat = [...state.danhSachGheDangDat];\r\n\r\n            let index = mangGheDangDat.findIndex(gheDangDat => gheDangDat.maGhe === action.gheDangDat.maGhe);\r\n\r\n            if(index!==-1){\r\n                mangGheDangDat.splice(index,1);\r\n            }else{\r\n                mangGheDangDat.push(action.gheDangDat)\r\n            }\r\n            return {...state,danhSachGheDangDat:mangGheDangDat}\r\n        }\r\n        case \"DAT_VE_THANH_CONG\":{\r\n            return {...state, danhSachGheDangDat:[]}\r\n        }\r\n        default: \r\n            return {...state};\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}