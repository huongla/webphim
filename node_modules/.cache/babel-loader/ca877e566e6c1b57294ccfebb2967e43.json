{"ast":null,"code":"import _slicedToArray from\"E:/FRONTEND/webphim/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useEffect,useState,useRef,memo}from'react';var ProgressBar=function ProgressBar(props){var _useState=useState(1),_useState2=_slicedToArray(_useState,2),offset=_useState2[0],setOffset=_useState2[1];var circleRef=useRef(null);var size=props.size,progress=props.progress,strokeWidth=props.strokeWidth,circleOneStroke=props.circleOneStroke,circleTwoStroke=props.circleTwoStroke;var center=size/2;var radius=size/2-strokeWidth/2;var circumference=2*Math.PI*radius;useEffect(function(){var progressOffset=(progress-100)/100*circumference;setOffset(progressOffset);circleRef.current.style='transition: stroke-dashoffset 2500ms ease-in-out;';},[setOffset,circumference,progress,offset]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"svg\",{className:\"svg\",width:size,height:size,children:[/*#__PURE__*/_jsx(\"circle\",{className:\"svg-circle-bg\",stroke:circleOneStroke,cx:center,cy:center,r:radius,strokeWidth:strokeWidth}),/*#__PURE__*/_jsx(\"circle\",{className:\"svg-circle\",stroke:circleTwoStroke,cx:center,cy:center,r:radius,strokeWidth:strokeWidth,strokeDasharray:circumference,ref:circleRef,strokeDashoffset:offset}),/*#__PURE__*/_jsxs(\"text\",{className:\"svg-circle-text\",x:center+3,y:center+5,children:[progress,\"%\"]})]})});};export default/*#__PURE__*/memo(ProgressBar);","map":{"version":3,"sources":["E:/FRONTEND/webphim/src/Page/Home/ProgressBar.js"],"names":["React","useEffect","useState","useRef","memo","ProgressBar","props","offset","setOffset","circleRef","size","progress","strokeWidth","circleOneStroke","circleTwoStroke","center","radius","circumference","Math","PI","progressOffset","current","style"],"mappings":"uRAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,CAAoCC,MAApC,CAA4CC,IAA5C,KAAwD,OAAxD,CAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,eACCJ,QAAQ,CAAC,CAAD,CADT,wCACpBK,MADoB,eACZC,SADY,eAE3B,GAAMC,CAAAA,SAAS,CAAGN,MAAM,CAAC,IAAD,CAAxB,CAF2B,GAIvBO,CAAAA,IAJuB,CASvBJ,KATuB,CAIvBI,IAJuB,CAKvBC,QALuB,CASvBL,KATuB,CAKvBK,QALuB,CAMvBC,WANuB,CASvBN,KATuB,CAMvBM,WANuB,CAOvBC,eAPuB,CASvBP,KATuB,CAOvBO,eAPuB,CAQvBC,eARuB,CASvBR,KATuB,CAQvBQ,eARuB,CAW3B,GAAMC,CAAAA,MAAM,CAAGL,IAAI,CAAG,CAAtB,CACA,GAAMM,CAAAA,MAAM,CAAGN,IAAI,CAAG,CAAP,CAAWE,WAAW,CAAG,CAAxC,CACA,GAAMK,CAAAA,aAAa,CAAG,EAAIC,IAAI,CAACC,EAAT,CAAcH,MAApC,CAGAf,SAAS,CAAC,UAAM,CACZ,GAAMmB,CAAAA,cAAc,CAAI,CAACT,QAAQ,CAAG,GAAZ,EAAmB,GAApB,CAA2BM,aAAlD,CACAT,SAAS,CAACY,cAAD,CAAT,CACAX,SAAS,CAACY,OAAV,CAAkBC,KAAlB,CAA0B,mDAA1B,CACH,CAJQ,CAIN,CAACd,SAAD,CAAYS,aAAZ,CAA2BN,QAA3B,CAAqCJ,MAArC,CAJM,CAAT,CAMA,mBACI,sCACI,aAAK,SAAS,CAAC,KAAf,CAAqB,KAAK,CAAEG,IAA5B,CAAkC,MAAM,CAAEA,IAA1C,wBACI,eACI,SAAS,CAAC,eADd,CAEI,MAAM,CAAEG,eAFZ,CAGI,EAAE,CAAEE,MAHR,CAII,EAAE,CAAEA,MAJR,CAKI,CAAC,CAAEC,MALP,CAMI,WAAW,CAAEJ,WANjB,EADJ,cAUI,eACI,SAAS,CAAC,YADd,CAEI,MAAM,CAAEE,eAFZ,CAGI,EAAE,CAAEC,MAHR,CAII,EAAE,CAAEA,MAJR,CAKI,CAAC,CAAEC,MALP,CAMI,WAAW,CAAEJ,WANjB,CAOI,eAAe,CAAEK,aAPrB,CAQI,GAAG,CAAER,SART,CASI,gBAAgB,CAAEF,MATtB,EAVJ,cAqBI,cAAM,SAAS,CAAC,iBAAhB,CAAkC,CAAC,CAAEQ,MAAM,CAAG,CAA9C,CAAiD,CAAC,CAAEA,MAAM,CAAG,CAA7D,WACKJ,QADL,OArBJ,GADJ,EADJ,CA6BH,CAnDD,CA6DA,2BAAeP,IAAI,CAACC,WAAD,CAAnB","sourcesContent":["import React,{ useEffect, useState, useRef, memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProgressBar = (props) => {\r\n    const [offset, setOffset] = useState(1);\r\n    const circleRef = useRef(null);\r\n    const {\r\n        size,\r\n        progress,\r\n        strokeWidth,\r\n        circleOneStroke,\r\n        circleTwoStroke,\r\n    } = props;\r\n\r\n    const center = size / 2;\r\n    const radius = size / 2 - strokeWidth / 2;\r\n    const circumference = 2 * Math.PI * radius;\r\n    \r\n\r\n    useEffect(() => {\r\n        const progressOffset = ((progress - 100) / 100) * circumference;\r\n        setOffset(progressOffset);\r\n        circleRef.current.style = 'transition: stroke-dashoffset 2500ms ease-in-out;';\r\n    }, [setOffset, circumference, progress, offset]);\r\n\r\n    return (\r\n        <>\r\n            <svg className=\"svg\" width={size} height={size}>\r\n                <circle\r\n                    className=\"svg-circle-bg\"\r\n                    stroke={circleOneStroke}\r\n                    cx={center}\r\n                    cy={center}\r\n                    r={radius}\r\n                    strokeWidth={strokeWidth}\r\n                   \r\n                />\r\n                <circle\r\n                    className=\"svg-circle\"\r\n                    stroke={circleTwoStroke}\r\n                    cx={center}\r\n                    cy={center}\r\n                    r={radius}\r\n                    strokeWidth={strokeWidth}\r\n                    strokeDasharray={circumference}\r\n                    ref={circleRef}\r\n                    strokeDashoffset={offset}\r\n                />\r\n                <text className=\"svg-circle-text\" x={center + 3} y={center + 5}>\r\n                    {progress}%\r\n    </text>\r\n            </svg>\r\n        </>\r\n    )\r\n}\r\n\r\nProgressBar.propTypes = {\r\n    size: PropTypes.number.isRequired,\r\n    progress: PropTypes.number.isRequired,\r\n    strokeWidth: PropTypes.number.isRequired,\r\n    circleOneStroke: PropTypes.string.isRequired,\r\n    circleTwoStroke: PropTypes.string.isRequired\r\n}\r\n\r\nexport default memo(ProgressBar);"]},"metadata":{},"sourceType":"module"}